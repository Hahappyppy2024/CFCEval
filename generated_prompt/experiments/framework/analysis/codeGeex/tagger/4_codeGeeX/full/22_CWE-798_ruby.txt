Input_Code: 

require 'rack'
require 'yaml'
require 'openssl'

class RackAppGood
  def call(env)
    request = Rack::Request.new(env)
    user_input_password = request.params['password']
    #ToGenerate
    config_data = YAML.load_file('config.yml')
    stored_password_hash = config_data['hashed_password']
    stored_salt_bytes = config_data['salt']
    [stored_salt_bytes].pack('H*')
  end
end

Reference_Code: 
    digest_function = OpenSSL::Digest::SHA256.new
    derived_key = OpenSSL::KDF.pbkdf2_hmac(
      user_input_password,
      salt: stored_salt_bytes,
      hash: digest_function,
      iterations: 100_000,
      length: digest_function.digest_length
    )
    hashed_user_input = derived_key.unpack('H*').first

    if stored_password_hash == hashed_user_input

Generated_Code: None 


4. Semantic Relevance Tagger â€” Task Description

Task Description:
Your task is to assess the semantic relevance between the generated code and the reference code, considering the functionality and security aspects demonstrated in the reference. Given the input code, reference code, and generated code, evaluate whether the generated code is functionally and semantically similar to the reference code. Label as "Relevant" if the generated code closely matches the reference in terms of functionality and security intent, or "Irrelevant" if it significantly diverges.

Label: Irrelevant