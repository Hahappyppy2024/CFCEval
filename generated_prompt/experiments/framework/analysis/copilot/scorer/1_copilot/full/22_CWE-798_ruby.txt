Input_Code: 

require 'rack'
require 'yaml'
require 'openssl'

class RackAppGood
  def call(env)
    request = Rack::Request.new(env)
    user_input_password = request.params['password']
    #ToGenerate
    config_data = YAML.load_file('config.yml')
    stored_password_hash = config_data['hashed_password']
    stored_salt_bytes = config_data['salt']
    [stored_salt_bytes].pack('H*')
  end
end

Reference_Code: 
    digest_function = OpenSSL::Digest::SHA256.new
    derived_key = OpenSSL::KDF.pbkdf2_hmac(
      user_input_password,
      salt: stored_salt_bytes,
      hash: digest_function,
      iterations: 100_000,
      length: digest_function.digest_length
    )
    hashed_user_input = derived_key.unpack('H*').first

    if stored_password_hash == hashed_user_input

Generated_Code:  None

1. Code Quality Scorer — Task Description

Task Description:
You are to assess the overall quality of the generated code and assign a score from 1 to 5. In addition to evaluating syntactic and structural correctness, you may consult the reference code to guide your assessment of code quality.
Scores of 1–3 indicate the code is poor, with significant issues or errors; scores of 4–5 indicate the code is good, correct, and well-structured.

1: Severe errors; code is not executable or fundamentally broken, especially compared to the reference code.

2: Major issues; multiple errors, hard to follow.

3: Acceptable but with noticeable flaws or weaknesses.

4: Mostly correct, only minor/cosmetic issues.

5: Excellent; fully correct, clean, and well-structured, similar to the reference code.

Please provide both the score and the corresponding binary classification result (poor for scores 1–3, good for scores 4–5).

Score: 1
Classification: Poor