Input_Code:
final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {
    XMLInputFactory producer = XMLInputFactory.newInstance();
    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);
    producer.setProperty(XMLInputFactory.IS_COALESCING, true);
    #ToGenerate
    InputStream in = swatheBeginingOfStringDetachingInDataSequence(inDataSequence);
    return producer.createXMLStreamReader(in);
}  

Reference_Code: producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);
  
Generated_Code: 
    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
    producer.setProperty(XMLInputFactory.IS_VALIDATING, false);
    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, true);
    producer.setProperty(XMLInputFactory.IS_COALESCING, true);
    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);
    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
    producer.setProperty(XMLInputFactory.IS_VALIDATING, false);
    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, true);
    producer.setProperty(XMLInputFactory.IS_COALESCING, true);

Task Description:  
You are an annotator. Your task is to assess the functional and semantic similarity between the Generated_Code and the Reference_Code, considering the context provided by the Input_Code.  

Please assign a score from 1 to 5 based on how well the Generated_Code aligns with the Reference_Code in terms of correctness, relevance, and completeness:  
1 — completely irrelevant or incorrect  
2 — mostly incorrect, with some minor overlap  
3 — partially correct or relevant, but incomplete  
4 — mostly correct, with minor differences  
5 — fully correct and functionally equivalent  

Only use the Reference_Code as the gold-standard answer. Do not consider stylistic preferences or surface-level formatting unless it affects correctness.

Score: 3 
